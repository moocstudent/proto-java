package com.implementsfun.protoj;// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: screen_message.proto

public final class ScreenMessage {
  private ScreenMessage() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface ScreenOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Screen)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>float size_inch = 1;</code>
     * @return The sizeInch.
     */
    float getSizeInch();

    /**
     * <code>.Screen.Resolution resolution = 2;</code>
     * @return Whether the resolution field is set.
     */
    boolean hasResolution();
    /**
     * <code>.Screen.Resolution resolution = 2;</code>
     * @return The resolution.
     */
    Screen.Resolution getResolution();
    /**
     * <code>.Screen.Resolution resolution = 2;</code>
     */
    Screen.ResolutionOrBuilder getResolutionOrBuilder();

    /**
     * <code>.Screen.Panel panel = 3;</code>
     * @return The enum numeric value on the wire for panel.
     */
    int getPanelValue();
    /**
     * <code>.Screen.Panel panel = 3;</code>
     * @return The panel.
     */
    Screen.Panel getPanel();

    /**
     * <code>bool multitouch = 4;</code>
     * @return The multitouch.
     */
    boolean getMultitouch();
  }
  /**
   * Protobuf type {@code Screen}
   */
  public static final class Screen extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:Screen)
      ScreenOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Screen.newBuilder() to construct.
    private Screen(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Screen() {
      panel_ = 0;
    }

    @Override
    @SuppressWarnings({"unused"})
    protected Object newInstance(
        UnusedPrivateParameter unused) {
      return new Screen();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Screen(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 13: {

              sizeInch_ = input.readFloat();
              break;
            }
            case 18: {
              Resolution.Builder subBuilder = null;
              if (resolution_ != null) {
                subBuilder = resolution_.toBuilder();
              }
              resolution_ = input.readMessage(Resolution.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(resolution_);
                resolution_ = subBuilder.buildPartial();
              }

              break;
            }
            case 24: {
              int rawValue = input.readEnum();

              panel_ = rawValue;
              break;
            }
            case 32: {

              multitouch_ = input.readBool();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return ScreenMessage.internal_static_Screen_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return ScreenMessage.internal_static_Screen_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              Screen.class, Builder.class);
    }

    /**
     * Protobuf enum {@code Screen.Panel}
     */
    public enum Panel
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>UNKNOWN = 0;</code>
       */
      UNKNOWN(0),
      /**
       * <code>IPS = 1;</code>
       */
      IPS(1),
      /**
       * <code>OLED = 2;</code>
       */
      OLED(2),
      UNRECOGNIZED(-1),
      ;

      /**
       * <code>UNKNOWN = 0;</code>
       */
      public static final int UNKNOWN_VALUE = 0;
      /**
       * <code>IPS = 1;</code>
       */
      public static final int IPS_VALUE = 1;
      /**
       * <code>OLED = 2;</code>
       */
      public static final int OLED_VALUE = 2;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @Deprecated
      public static Panel valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static Panel forNumber(int value) {
        switch (value) {
          case 0: return UNKNOWN;
          case 1: return IPS;
          case 2: return OLED;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Panel>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          Panel> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Panel>() {
              public Panel findValueByNumber(int number) {
                return Panel.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        if (this == UNRECOGNIZED) {
          throw new IllegalStateException(
              "Can't get the descriptor of an unrecognized enum value.");
        }
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return Screen.getDescriptor().getEnumTypes().get(0);
      }

      private static final Panel[] VALUES = values();

      public static Panel valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private Panel(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:Screen.Panel)
    }

    public interface ResolutionOrBuilder extends
        // @@protoc_insertion_point(interface_extends:Screen.Resolution)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>uint32 width = 1;</code>
       * @return The width.
       */
      int getWidth();

      /**
       * <code>uint32 height = 2;</code>
       * @return The height.
       */
      int getHeight();
    }
    /**
     * Protobuf type {@code Screen.Resolution}
     */
    public static final class Resolution extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:Screen.Resolution)
        ResolutionOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use Resolution.newBuilder() to construct.
      private Resolution(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private Resolution() {
      }

      @Override
      @SuppressWarnings({"unused"})
      protected Object newInstance(
          UnusedPrivateParameter unused) {
        return new Resolution();
      }

      @Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private Resolution(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new NullPointerException();
        }
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {

                width_ = input.readUInt32();
                break;
              }
              case 16: {

                height_ = input.readUInt32();
                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return ScreenMessage.internal_static_Screen_Resolution_descriptor;
      }

      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return ScreenMessage.internal_static_Screen_Resolution_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                Resolution.class, Builder.class);
      }

      public static final int WIDTH_FIELD_NUMBER = 1;
      private int width_;
      /**
       * <code>uint32 width = 1;</code>
       * @return The width.
       */
      @Override
      public int getWidth() {
        return width_;
      }

      public static final int HEIGHT_FIELD_NUMBER = 2;
      private int height_;
      /**
       * <code>uint32 height = 2;</code>
       * @return The height.
       */
      @Override
      public int getHeight() {
        return height_;
      }

      private byte memoizedIsInitialized = -1;
      @Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (width_ != 0) {
          output.writeUInt32(1, width_);
        }
        if (height_ != 0) {
          output.writeUInt32(2, height_);
        }
        unknownFields.writeTo(output);
      }

      @Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (width_ != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(1, width_);
        }
        if (height_ != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(2, height_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @Override
      public boolean equals(final Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof Resolution)) {
          return super.equals(obj);
        }
        Resolution other = (Resolution) obj;

        if (getWidth()
            != other.getWidth()) return false;
        if (getHeight()
            != other.getHeight()) return false;
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + WIDTH_FIELD_NUMBER;
        hash = (53 * hash) + getWidth();
        hash = (37 * hash) + HEIGHT_FIELD_NUMBER;
        hash = (53 * hash) + getHeight();
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static Resolution parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static Resolution parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static Resolution parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static Resolution parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static Resolution parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static Resolution parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static Resolution parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static Resolution parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static Resolution parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static Resolution parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static Resolution parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static Resolution parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(Resolution prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @Override
      protected Builder newBuilderForType(
          BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code Screen.Resolution}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:Screen.Resolution)
          ResolutionOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return ScreenMessage.internal_static_Screen_Resolution_descriptor;
        }

        @Override
        protected FieldAccessorTable
            internalGetFieldAccessorTable() {
          return ScreenMessage.internal_static_Screen_Resolution_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  Resolution.class, Builder.class);
        }

        // Construct using ScreenMessage.Screen.Resolution.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @Override
        public Builder clear() {
          super.clear();
          width_ = 0;

          height_ = 0;

          return this;
        }

        @Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return ScreenMessage.internal_static_Screen_Resolution_descriptor;
        }

        @Override
        public Resolution getDefaultInstanceForType() {
          return Resolution.getDefaultInstance();
        }

        @Override
        public Resolution build() {
          Resolution result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @Override
        public Resolution buildPartial() {
          Resolution result = new Resolution(this);
          result.width_ = width_;
          result.height_ = height_;
          onBuilt();
          return result;
        }

        @Override
        public Builder clone() {
          return super.clone();
        }
        @Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            Object value) {
          return super.setField(field, value);
        }
        @Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            Object value) {
          return super.addRepeatedField(field, value);
        }
        @Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof Resolution) {
            return mergeFrom((Resolution)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(Resolution other) {
          if (other == Resolution.getDefaultInstance()) return this;
          if (other.getWidth() != 0) {
            setWidth(other.getWidth());
          }
          if (other.getHeight() != 0) {
            setHeight(other.getHeight());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @Override
        public final boolean isInitialized() {
          return true;
        }

        @Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          Resolution parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (Resolution) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        private int width_ ;
        /**
         * <code>uint32 width = 1;</code>
         * @return The width.
         */
        @Override
        public int getWidth() {
          return width_;
        }
        /**
         * <code>uint32 width = 1;</code>
         * @param value The width to set.
         * @return This builder for chaining.
         */
        public Builder setWidth(int value) {
          
          width_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>uint32 width = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearWidth() {
          
          width_ = 0;
          onChanged();
          return this;
        }

        private int height_ ;
        /**
         * <code>uint32 height = 2;</code>
         * @return The height.
         */
        @Override
        public int getHeight() {
          return height_;
        }
        /**
         * <code>uint32 height = 2;</code>
         * @param value The height to set.
         * @return This builder for chaining.
         */
        public Builder setHeight(int value) {
          
          height_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>uint32 height = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearHeight() {
          
          height_ = 0;
          onChanged();
          return this;
        }
        @Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:Screen.Resolution)
      }

      // @@protoc_insertion_point(class_scope:Screen.Resolution)
      private static final Resolution DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new Resolution();
      }

      public static Resolution getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<Resolution>
          PARSER = new com.google.protobuf.AbstractParser<Resolution>() {
        @Override
        public Resolution parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new Resolution(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<Resolution> parser() {
        return PARSER;
      }

      @Override
      public com.google.protobuf.Parser<Resolution> getParserForType() {
        return PARSER;
      }

      @Override
      public Resolution getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public static final int SIZE_INCH_FIELD_NUMBER = 1;
    private float sizeInch_;
    /**
     * <code>float size_inch = 1;</code>
     * @return The sizeInch.
     */
    @Override
    public float getSizeInch() {
      return sizeInch_;
    }

    public static final int RESOLUTION_FIELD_NUMBER = 2;
    private Resolution resolution_;
    /**
     * <code>.Screen.Resolution resolution = 2;</code>
     * @return Whether the resolution field is set.
     */
    @Override
    public boolean hasResolution() {
      return resolution_ != null;
    }
    /**
     * <code>.Screen.Resolution resolution = 2;</code>
     * @return The resolution.
     */
    @Override
    public Resolution getResolution() {
      return resolution_ == null ? Resolution.getDefaultInstance() : resolution_;
    }
    /**
     * <code>.Screen.Resolution resolution = 2;</code>
     */
    @Override
    public ResolutionOrBuilder getResolutionOrBuilder() {
      return getResolution();
    }

    public static final int PANEL_FIELD_NUMBER = 3;
    private int panel_;
    /**
     * <code>.Screen.Panel panel = 3;</code>
     * @return The enum numeric value on the wire for panel.
     */
    @Override public int getPanelValue() {
      return panel_;
    }
    /**
     * <code>.Screen.Panel panel = 3;</code>
     * @return The panel.
     */
    @Override public Panel getPanel() {
      @SuppressWarnings("deprecation")
      Panel result = Panel.valueOf(panel_);
      return result == null ? Panel.UNRECOGNIZED : result;
    }

    public static final int MULTITOUCH_FIELD_NUMBER = 4;
    private boolean multitouch_;
    /**
     * <code>bool multitouch = 4;</code>
     * @return The multitouch.
     */
    @Override
    public boolean getMultitouch() {
      return multitouch_;
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (Float.floatToRawIntBits(sizeInch_) != 0) {
        output.writeFloat(1, sizeInch_);
      }
      if (resolution_ != null) {
        output.writeMessage(2, getResolution());
      }
      if (panel_ != Panel.UNKNOWN.getNumber()) {
        output.writeEnum(3, panel_);
      }
      if (multitouch_ != false) {
        output.writeBool(4, multitouch_);
      }
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (Float.floatToRawIntBits(sizeInch_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(1, sizeInch_);
      }
      if (resolution_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getResolution());
      }
      if (panel_ != Panel.UNKNOWN.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, panel_);
      }
      if (multitouch_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(4, multitouch_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof Screen)) {
        return super.equals(obj);
      }
      Screen other = (Screen) obj;

      if (Float.floatToIntBits(getSizeInch())
          != Float.floatToIntBits(
              other.getSizeInch())) return false;
      if (hasResolution() != other.hasResolution()) return false;
      if (hasResolution()) {
        if (!getResolution()
            .equals(other.getResolution())) return false;
      }
      if (panel_ != other.panel_) return false;
      if (getMultitouch()
          != other.getMultitouch()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + SIZE_INCH_FIELD_NUMBER;
      hash = (53 * hash) + Float.floatToIntBits(
          getSizeInch());
      if (hasResolution()) {
        hash = (37 * hash) + RESOLUTION_FIELD_NUMBER;
        hash = (53 * hash) + getResolution().hashCode();
      }
      hash = (37 * hash) + PANEL_FIELD_NUMBER;
      hash = (53 * hash) + panel_;
      hash = (37 * hash) + MULTITOUCH_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getMultitouch());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static Screen parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Screen parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Screen parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Screen parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Screen parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Screen parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Screen parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static Screen parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static Screen parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static Screen parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static Screen parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static Screen parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(Screen prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Screen}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Screen)
        ScreenOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return ScreenMessage.internal_static_Screen_descriptor;
      }

      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return ScreenMessage.internal_static_Screen_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                Screen.class, Builder.class);
      }

      // Construct using ScreenMessage.Screen.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        sizeInch_ = 0F;

        if (resolutionBuilder_ == null) {
          resolution_ = null;
        } else {
          resolution_ = null;
          resolutionBuilder_ = null;
        }
        panel_ = 0;

        multitouch_ = false;

        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return ScreenMessage.internal_static_Screen_descriptor;
      }

      @Override
      public Screen getDefaultInstanceForType() {
        return Screen.getDefaultInstance();
      }

      @Override
      public Screen build() {
        Screen result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public Screen buildPartial() {
        Screen result = new Screen(this);
        result.sizeInch_ = sizeInch_;
        if (resolutionBuilder_ == null) {
          result.resolution_ = resolution_;
        } else {
          result.resolution_ = resolutionBuilder_.build();
        }
        result.panel_ = panel_;
        result.multitouch_ = multitouch_;
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return super.clone();
      }
      @Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.setField(field, value);
      }
      @Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof Screen) {
          return mergeFrom((Screen)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(Screen other) {
        if (other == Screen.getDefaultInstance()) return this;
        if (other.getSizeInch() != 0F) {
          setSizeInch(other.getSizeInch());
        }
        if (other.hasResolution()) {
          mergeResolution(other.getResolution());
        }
        if (other.panel_ != 0) {
          setPanelValue(other.getPanelValue());
        }
        if (other.getMultitouch() != false) {
          setMultitouch(other.getMultitouch());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Screen parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (Screen) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private float sizeInch_ ;
      /**
       * <code>float size_inch = 1;</code>
       * @return The sizeInch.
       */
      @Override
      public float getSizeInch() {
        return sizeInch_;
      }
      /**
       * <code>float size_inch = 1;</code>
       * @param value The sizeInch to set.
       * @return This builder for chaining.
       */
      public Builder setSizeInch(float value) {
        
        sizeInch_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float size_inch = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearSizeInch() {
        
        sizeInch_ = 0F;
        onChanged();
        return this;
      }

      private Resolution resolution_;
      private com.google.protobuf.SingleFieldBuilderV3<
          Resolution, Resolution.Builder, ResolutionOrBuilder> resolutionBuilder_;
      /**
       * <code>.Screen.Resolution resolution = 2;</code>
       * @return Whether the resolution field is set.
       */
      public boolean hasResolution() {
        return resolutionBuilder_ != null || resolution_ != null;
      }
      /**
       * <code>.Screen.Resolution resolution = 2;</code>
       * @return The resolution.
       */
      public Resolution getResolution() {
        if (resolutionBuilder_ == null) {
          return resolution_ == null ? Resolution.getDefaultInstance() : resolution_;
        } else {
          return resolutionBuilder_.getMessage();
        }
      }
      /**
       * <code>.Screen.Resolution resolution = 2;</code>
       */
      public Builder setResolution(Resolution value) {
        if (resolutionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          resolution_ = value;
          onChanged();
        } else {
          resolutionBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.Screen.Resolution resolution = 2;</code>
       */
      public Builder setResolution(
          Resolution.Builder builderForValue) {
        if (resolutionBuilder_ == null) {
          resolution_ = builderForValue.build();
          onChanged();
        } else {
          resolutionBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.Screen.Resolution resolution = 2;</code>
       */
      public Builder mergeResolution(Resolution value) {
        if (resolutionBuilder_ == null) {
          if (resolution_ != null) {
            resolution_ =
              Resolution.newBuilder(resolution_).mergeFrom(value).buildPartial();
          } else {
            resolution_ = value;
          }
          onChanged();
        } else {
          resolutionBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.Screen.Resolution resolution = 2;</code>
       */
      public Builder clearResolution() {
        if (resolutionBuilder_ == null) {
          resolution_ = null;
          onChanged();
        } else {
          resolution_ = null;
          resolutionBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.Screen.Resolution resolution = 2;</code>
       */
      public Resolution.Builder getResolutionBuilder() {
        
        onChanged();
        return getResolutionFieldBuilder().getBuilder();
      }
      /**
       * <code>.Screen.Resolution resolution = 2;</code>
       */
      public ResolutionOrBuilder getResolutionOrBuilder() {
        if (resolutionBuilder_ != null) {
          return resolutionBuilder_.getMessageOrBuilder();
        } else {
          return resolution_ == null ?
              Resolution.getDefaultInstance() : resolution_;
        }
      }
      /**
       * <code>.Screen.Resolution resolution = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          Resolution, Resolution.Builder, ResolutionOrBuilder>
          getResolutionFieldBuilder() {
        if (resolutionBuilder_ == null) {
          resolutionBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              Resolution, Resolution.Builder, ResolutionOrBuilder>(
                  getResolution(),
                  getParentForChildren(),
                  isClean());
          resolution_ = null;
        }
        return resolutionBuilder_;
      }

      private int panel_ = 0;
      /**
       * <code>.Screen.Panel panel = 3;</code>
       * @return The enum numeric value on the wire for panel.
       */
      @Override public int getPanelValue() {
        return panel_;
      }
      /**
       * <code>.Screen.Panel panel = 3;</code>
       * @param value The enum numeric value on the wire for panel to set.
       * @return This builder for chaining.
       */
      public Builder setPanelValue(int value) {
        
        panel_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.Screen.Panel panel = 3;</code>
       * @return The panel.
       */
      @Override
      public Panel getPanel() {
        @SuppressWarnings("deprecation")
        Panel result = Panel.valueOf(panel_);
        return result == null ? Panel.UNRECOGNIZED : result;
      }
      /**
       * <code>.Screen.Panel panel = 3;</code>
       * @param value The panel to set.
       * @return This builder for chaining.
       */
      public Builder setPanel(Panel value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        panel_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.Screen.Panel panel = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearPanel() {
        
        panel_ = 0;
        onChanged();
        return this;
      }

      private boolean multitouch_ ;
      /**
       * <code>bool multitouch = 4;</code>
       * @return The multitouch.
       */
      @Override
      public boolean getMultitouch() {
        return multitouch_;
      }
      /**
       * <code>bool multitouch = 4;</code>
       * @param value The multitouch to set.
       * @return This builder for chaining.
       */
      public Builder setMultitouch(boolean value) {
        
        multitouch_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool multitouch = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearMultitouch() {
        
        multitouch_ = false;
        onChanged();
        return this;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:Screen)
    }

    // @@protoc_insertion_point(class_scope:Screen)
    private static final Screen DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new Screen();
    }

    public static Screen getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Screen>
        PARSER = new com.google.protobuf.AbstractParser<Screen>() {
      @Override
      public Screen parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Screen(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Screen> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<Screen> getParserForType() {
      return PARSER;
    }

    @Override
    public Screen getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Screen_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Screen_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Screen_Resolution_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Screen_Resolution_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    String[] descriptorData = {
      "\n\024screen_message.proto\"\313\001\n\006Screen\022\021\n\tsiz" +
      "e_inch\030\001 \001(\002\022&\n\nresolution\030\002 \001(\0132\022.Scree" +
      "n.Resolution\022\034\n\005panel\030\003 \001(\0162\r.Screen.Pan" +
      "el\022\022\n\nmultitouch\030\004 \001(\010\032+\n\nResolution\022\r\n\005" +
      "width\030\001 \001(\r\022\016\n\006height\030\002 \001(\r\"\'\n\005Panel\022\013\n\007" +
      "UNKNOWN\020\000\022\007\n\003IPS\020\001\022\010\n\004OLED\020\002b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_Screen_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_Screen_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Screen_descriptor,
        new String[] { "SizeInch", "Resolution", "Panel", "Multitouch", });
    internal_static_Screen_Resolution_descriptor =
      internal_static_Screen_descriptor.getNestedTypes().get(0);
    internal_static_Screen_Resolution_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Screen_Resolution_descriptor,
        new String[] { "Width", "Height", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
